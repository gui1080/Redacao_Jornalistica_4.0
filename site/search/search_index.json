{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o para Projeto Reda\u00e7\u00e3o Jornal\u00edstica 4.0 Feito para mat\u00e9ria de T\u00f3picos Avan\u00e7ados em Computadores. Mat\u00e9ria realizada em parceira com Departamento de Jornalismo da Universidade de Bras\u00edlia. Backend em Django Python para TAC, 2022/01 Reda\u00e7\u00e3o Jornal\u00edstica 4.0 Guilherme Braga Pinto 17/0162290. Professor Edison Ishikawa. Backend - Github","title":"Documenta\u00e7\u00e3o para Projeto Reda\u00e7\u00e3o Jornal\u00edstica 4.0"},{"location":"#documentacao-para-projeto-redacao-jornalistica-40","text":"Feito para mat\u00e9ria de T\u00f3picos Avan\u00e7ados em Computadores. Mat\u00e9ria realizada em parceira com Departamento de Jornalismo da Universidade de Bras\u00edlia. Backend em Django Python para TAC, 2022/01 Reda\u00e7\u00e3o Jornal\u00edstica 4.0 Guilherme Braga Pinto 17/0162290. Professor Edison Ishikawa. Backend - Github","title":"Documenta\u00e7\u00e3o para Projeto Reda\u00e7\u00e3o Jornal\u00edstica 4.0"},{"location":"marco_teorico/","text":"Reda\u00e7\u00e3o Jornal\u00edstica 4.0 Motiva\u00e7\u00e3o Reda\u00e7\u00f5es Jornal\u00edsticas s\u00e3o um caso de estudo ideal para a modelagem de um processo intensivo em conhecimento, por conta da velocidade na qual os processos devem lidar com uma grande quantidade de informa\u00e7\u00e3o al\u00e9m de uma grande quantidade de partes envolvidas. Isso tamb\u00e9m reflete os padr\u00f5es de consumo atuais, adaptado a um ambiente influenciado pela internet. Isso n\u00e3o s\u00f3 afeta como a informa\u00e7\u00e3o circula em uma sociedade, mas como ela \u00e9 produzida. Ou seja, afeta diretamente o Jornalista como uma profiss\u00e3o. \u00c9 muito complexo o processo de observar e mapear como este o workflow funciona na vida real. Se mostra recorrente n\u00e3o s\u00f3 que o processo n\u00e3o ocorra da mesma maneira entre itera\u00e7\u00f5es, mas que o mesmo mude estruturalmente em tempo de execu\u00e7\u00e3o, diferenciando-se de um processo cl\u00e1ssico. Neste momento surgem Decis\u00f5es de dif\u00edcil resolu\u00e7\u00e3o, assim \u00e9 necess\u00e1rio um sistema que documente e d\u00ea suporte para a visualiza\u00e7\u00e3o e execu\u00e7\u00e3o de uma tarefa no contexto da Reda\u00e7\u00e3o Jornal\u00edstica moderna. Metodologia O desenvolvimento do sistema se baseia no Scrum, uma metodologia iterativa e incremental que se d\u00e1 tendo em base a elabora\u00e7\u00e3o inicial da Vis\u00e3o do Produto para que uma lista de tarefas (Backlog) possa ser definida. Definiu-se as seguintes itera\u00e7\u00f5es at\u00e9 a obten\u00e7\u00e3o do produto final: Sprint 1 \u2013 foco na elabora\u00e7\u00e3o de um CMS tradicional otimizado para jornalismo web com interface para anota\u00e7\u00f5es sem\u00e2nticas, baseando-se no modelo de Banco de Dados News ML 2. Sprint 2 \u2013 integra\u00e7\u00e3o com m\u00f3dulo sem\u00e2ntico. Sprint 3 \u2013 integra\u00e7\u00e3o com m\u00f3dulo de workflow inteligente. Processo Estruturados e Processos N\u00e3o Estruturados As seguintes imagens apresentam por objetivo diferenciar um Processso Estruturado de um Processo N\u00e3o Estruturado. Um processo Estruturado apresenta uma divis\u00e3o clara entre as partes envolvidas, o que elas fazem e quando elas realizam a sua a\u00e7\u00e3o. Esta nova maneira de representar um processo acaba por ser mais completa ao definir o que acontece no caso de estudo em quest\u00e3o. Quando uma informa\u00e7\u00e3o chega na Reda\u00e7\u00e3o Jornal\u00edstica, ela deve ser r\u00e1pidamente tratada. Caso a informa\u00e7\u00e3o que se deseje publicar ou armazenar seja tratada por meio de um processo Estruturado, existe uma chance muito grande que se perca o momento ideal de publica\u00e7\u00e3o da mat\u00e9ria, ou que ela acabe \"presa\" em uma parte do processo. Na realidade o ambiente descrito \u00e9 altamente din\u00e2mico e colaborativo, logo a estrutura de \"Piscina para Lazer\" em contraste com a estrutura de \"Piscina Ol\u00edmpica\" \u00e9 mais efici\u00eante ao levantar o funcionamento deste ambiente. Na \"Piscina para Lazer\", os processos s\u00e3o boias que flutuam podendo avan\u00e7ar ou regredir em termos de execu\u00e7\u00e3o, e os Agentes envolvidos acabam por colaborar com uma tarefa na medida na qual a urg\u00eancia existe. \u00c9 com essa mentalidade que se enxergou o desenvolvimento deste software de suporte, tamb\u00e9m visando suporte sem\u00e2ntico. Fonte das imagens: Jo\u00e3o Pedro Souza Nunes. Vis\u00e3o do Produto PARA Jornalistas e Empresas de Comunica\u00e7\u00e3o. QUE precisam produzir, recuperar, armazenar, distribuir e divulgar conte\u00fado multim\u00eddia. O News Room 4.0 \u00c9 UM CMS (content management system) sistema de gerenciamento de conte\u00fado sem\u00e2ntico e inteligente. QUE produz conte\u00fado e realiza gest\u00e3o eficiente dele atrav\u00e9s do entendimento das regras operacionais da reda\u00e7\u00e3o jornal\u00edstica. AO CONTR\u00c1RIO dos jornais tradicionais que t\u00eam uma produ\u00e7\u00e3o jornal\u00edstica \"engessada\" ou dos jornais digitais que n\u00e3o t\u00eam um sistema de produ\u00e7\u00e3o fluida. O NOSSO PRODUTO traz a organiza\u00e7\u00e3o de produ\u00e7\u00f5es e processos de forma din\u00e2mica para a distribui\u00e7\u00e3o de not\u00edcias em variadas plataformas de comunica\u00e7\u00e3o. Usu\u00e1rios Cinco principais usu\u00e1rios: Jornalista , Fot\u00f3grafo, Revisor, Editor e CDOC. 1 - Jornalista Quer escrever sua mat\u00e9ria jornal\u00edstica. Login no sistema. Come\u00e7a a preencher um formul\u00e1rio para a produ\u00e7\u00e3o jornal\u00edstica de acordo com o guia abaixo. 2 - Fot\u00f3grafo Classifica\u00e7\u00e3o das fotos de acordo com as necessidades das mat\u00e9rias 3 - Revisor Revisa o texto. 4 - Editor Aprova a mat\u00e9ria para a publica\u00e7\u00e3o ou arquiva. 5 - Centro de documenta\u00e7\u00e3o (CDOC) Arquiva todas as mat\u00e9rias jornal\u00edsticas publicadas ou n\u00e3o, bem como as outras m\u00eddias. \u00c9 muito comum que um processo na Reda\u00e7\u00e3o Jornal\u00edstica realize um trabalho mas que n\u00e3o seja vinculado na m\u00eddia. Estrutura do projeto final A vis\u00e3o do projeto para a primeira sprint prev\u00ea a constru\u00e7\u00e3o de uma API em Django/Python, para que exista suporte a comunica\u00e7\u00e3o com Frontent feito em React. A linguagem Python se mostra mais mold\u00e1vel e foi excolhida com o objetivo de dar suporte para anota\u00e7\u00e3o sem\u00e2ntica de informa\u00e7\u00f5es, com o uso de ontologias.","title":"Reda\u00e7\u00e3o Jornal\u00edstica 4.0"},{"location":"marco_teorico/#redacao-jornalistica-40","text":"","title":"Reda\u00e7\u00e3o Jornal\u00edstica 4.0"},{"location":"marco_teorico/#motivacao","text":"Reda\u00e7\u00f5es Jornal\u00edsticas s\u00e3o um caso de estudo ideal para a modelagem de um processo intensivo em conhecimento, por conta da velocidade na qual os processos devem lidar com uma grande quantidade de informa\u00e7\u00e3o al\u00e9m de uma grande quantidade de partes envolvidas. Isso tamb\u00e9m reflete os padr\u00f5es de consumo atuais, adaptado a um ambiente influenciado pela internet. Isso n\u00e3o s\u00f3 afeta como a informa\u00e7\u00e3o circula em uma sociedade, mas como ela \u00e9 produzida. Ou seja, afeta diretamente o Jornalista como uma profiss\u00e3o. \u00c9 muito complexo o processo de observar e mapear como este o workflow funciona na vida real. Se mostra recorrente n\u00e3o s\u00f3 que o processo n\u00e3o ocorra da mesma maneira entre itera\u00e7\u00f5es, mas que o mesmo mude estruturalmente em tempo de execu\u00e7\u00e3o, diferenciando-se de um processo cl\u00e1ssico. Neste momento surgem Decis\u00f5es de dif\u00edcil resolu\u00e7\u00e3o, assim \u00e9 necess\u00e1rio um sistema que documente e d\u00ea suporte para a visualiza\u00e7\u00e3o e execu\u00e7\u00e3o de uma tarefa no contexto da Reda\u00e7\u00e3o Jornal\u00edstica moderna.","title":"Motiva\u00e7\u00e3o"},{"location":"marco_teorico/#metodologia","text":"O desenvolvimento do sistema se baseia no Scrum, uma metodologia iterativa e incremental que se d\u00e1 tendo em base a elabora\u00e7\u00e3o inicial da Vis\u00e3o do Produto para que uma lista de tarefas (Backlog) possa ser definida. Definiu-se as seguintes itera\u00e7\u00f5es at\u00e9 a obten\u00e7\u00e3o do produto final: Sprint 1 \u2013 foco na elabora\u00e7\u00e3o de um CMS tradicional otimizado para jornalismo web com interface para anota\u00e7\u00f5es sem\u00e2nticas, baseando-se no modelo de Banco de Dados News ML 2. Sprint 2 \u2013 integra\u00e7\u00e3o com m\u00f3dulo sem\u00e2ntico. Sprint 3 \u2013 integra\u00e7\u00e3o com m\u00f3dulo de workflow inteligente.","title":"Metodologia"},{"location":"marco_teorico/#processo-estruturados-e-processos-nao-estruturados","text":"As seguintes imagens apresentam por objetivo diferenciar um Processso Estruturado de um Processo N\u00e3o Estruturado. Um processo Estruturado apresenta uma divis\u00e3o clara entre as partes envolvidas, o que elas fazem e quando elas realizam a sua a\u00e7\u00e3o. Esta nova maneira de representar um processo acaba por ser mais completa ao definir o que acontece no caso de estudo em quest\u00e3o. Quando uma informa\u00e7\u00e3o chega na Reda\u00e7\u00e3o Jornal\u00edstica, ela deve ser r\u00e1pidamente tratada. Caso a informa\u00e7\u00e3o que se deseje publicar ou armazenar seja tratada por meio de um processo Estruturado, existe uma chance muito grande que se perca o momento ideal de publica\u00e7\u00e3o da mat\u00e9ria, ou que ela acabe \"presa\" em uma parte do processo. Na realidade o ambiente descrito \u00e9 altamente din\u00e2mico e colaborativo, logo a estrutura de \"Piscina para Lazer\" em contraste com a estrutura de \"Piscina Ol\u00edmpica\" \u00e9 mais efici\u00eante ao levantar o funcionamento deste ambiente. Na \"Piscina para Lazer\", os processos s\u00e3o boias que flutuam podendo avan\u00e7ar ou regredir em termos de execu\u00e7\u00e3o, e os Agentes envolvidos acabam por colaborar com uma tarefa na medida na qual a urg\u00eancia existe. \u00c9 com essa mentalidade que se enxergou o desenvolvimento deste software de suporte, tamb\u00e9m visando suporte sem\u00e2ntico. Fonte das imagens: Jo\u00e3o Pedro Souza Nunes.","title":"Processo Estruturados e Processos N\u00e3o Estruturados"},{"location":"marco_teorico/#visao-do-produto","text":"PARA Jornalistas e Empresas de Comunica\u00e7\u00e3o. QUE precisam produzir, recuperar, armazenar, distribuir e divulgar conte\u00fado multim\u00eddia. O News Room 4.0 \u00c9 UM CMS (content management system) sistema de gerenciamento de conte\u00fado sem\u00e2ntico e inteligente. QUE produz conte\u00fado e realiza gest\u00e3o eficiente dele atrav\u00e9s do entendimento das regras operacionais da reda\u00e7\u00e3o jornal\u00edstica. AO CONTR\u00c1RIO dos jornais tradicionais que t\u00eam uma produ\u00e7\u00e3o jornal\u00edstica \"engessada\" ou dos jornais digitais que n\u00e3o t\u00eam um sistema de produ\u00e7\u00e3o fluida. O NOSSO PRODUTO traz a organiza\u00e7\u00e3o de produ\u00e7\u00f5es e processos de forma din\u00e2mica para a distribui\u00e7\u00e3o de not\u00edcias em variadas plataformas de comunica\u00e7\u00e3o.","title":"Vis\u00e3o do Produto"},{"location":"marco_teorico/#usuarios","text":"Cinco principais usu\u00e1rios: Jornalista , Fot\u00f3grafo, Revisor, Editor e CDOC.","title":"Usu\u00e1rios"},{"location":"marco_teorico/#1-jornalista","text":"Quer escrever sua mat\u00e9ria jornal\u00edstica. Login no sistema. Come\u00e7a a preencher um formul\u00e1rio para a produ\u00e7\u00e3o jornal\u00edstica de acordo com o guia abaixo.","title":"1 - Jornalista"},{"location":"marco_teorico/#2-fotografo","text":"Classifica\u00e7\u00e3o das fotos de acordo com as necessidades das mat\u00e9rias","title":"2 - Fot\u00f3grafo"},{"location":"marco_teorico/#3-revisor","text":"Revisa o texto.","title":"3 - Revisor"},{"location":"marco_teorico/#4-editor","text":"Aprova a mat\u00e9ria para a publica\u00e7\u00e3o ou arquiva.","title":"4 - Editor"},{"location":"marco_teorico/#5-centro-de-documentacao-cdoc","text":"Arquiva todas as mat\u00e9rias jornal\u00edsticas publicadas ou n\u00e3o, bem como as outras m\u00eddias. \u00c9 muito comum que um processo na Reda\u00e7\u00e3o Jornal\u00edstica realize um trabalho mas que n\u00e3o seja vinculado na m\u00eddia.","title":"5 - Centro de documenta\u00e7\u00e3o (CDOC)"},{"location":"marco_teorico/#estrutura-do-projeto-final","text":"A vis\u00e3o do projeto para a primeira sprint prev\u00ea a constru\u00e7\u00e3o de uma API em Django/Python, para que exista suporte a comunica\u00e7\u00e3o com Frontent feito em React. A linguagem Python se mostra mais mold\u00e1vel e foi excolhida com o objetivo de dar suporte para anota\u00e7\u00e3o sem\u00e2ntica de informa\u00e7\u00f5es, com o uso de ontologias.","title":"Estrutura do projeto final"},{"location":"primeira_sprint/","text":"Backend da Primeira Sprint Feito em Django/Python, usando Django REST Framework . Comandos mkdocs serve - Rodar na pasta \"documenta\u00e7\u00e3o\" para ler a documenta\u00e7\u00e3o. mkdocs build - Rodar na pasta \"documenta\u00e7\u00e3o\" para exportar a documenta\u00e7\u00e3o. python3 -m venv venv - Criar ambiente virtual. source venv/bin/activate - Entrar no ambiente virtual. chmod +x dependencias.sh - Para dar permiss\u00e3o para rodar o script de depend\u00eancias. ./dependencias.sh - Rodar script que baixa depend\u00eancias. Depend\u00eancia para rodar documenta\u00e7\u00e3o: pip install mkdocs Arquivo de Depend\u00eancias Arquivo com atalho para confirgua\u00e7\u00e3o de ambiente virtual. Basicamente baixa o Django se necess\u00e1rio e v\u00ea se o Python est\u00e1 na vers\u00e3o correta! echo \"Hello $USER\" echo \"Se certifique que seu Python3 est\u00e1 em dia (pelo menos Python 3.9.7)\" python3 --version pip3 install --upgrade pip3 python3 manage.py makemigrations python3 manage.py migrate pip3 install djangorestframework pip3 install django-cors-headers pip3 install Django echo \"Rodando Django -> 'python3 manage.py runserver'\" echo \"Tchau $USER\" python3 manage.py runserver Layout do projeto . \u251c\u2500\u2500 func_basic \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 admin.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 apps.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 models.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 serializers.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 views.cpython-310.pyc \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u2502 \u251c\u2500\u2500 0001_initial.cpython-310.pyc \u2502 \u2502 \u2502 \u2514\u2500\u2500 0002_alter_user_login_user_id.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 0001_initial.py \u2502 \u2502 \u2514\u2500\u2500 0002_alter_user_login_user_id.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 serializers.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 TAC_RedJor4 \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 settings.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 wsgi.cpython-310.pyc \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 asgi.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 venv \u2502 \u251c\u2500\u2500 ... \u251c\u2500\u2500 .DS_Store \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 dependencias.sh \u2514\u2500\u2500 manage.py Proposta de Desenvolvimento Mapeamento te\u00f3rico do conte\u00fado Modelos Para a primeira itera\u00e7\u00e3o do trabalho, focou-se em implementar a funcionalidade de adi\u00e7\u00e3o de texto, imagem e gr\u00e1ficos por parte do jornalista. O retorno dos dados ocorre por meio de um \"json.dump()\" para cada m\u00e9todo. User_Login user_id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False) name = models.CharField(max_length=50, unique=True, null=False) password = models.CharField(max_length=150, unique=False, null=False) email = models.CharField(max_length=50, unique=True, null=False) GET Dado par usu\u00e1rio e senha, retorna seu objeto de usu\u00e1rio. Passa seu id nas requisi\u00e7\u00f5es para adicionar itens de m\u00eddia novos. POST Adiciona um us\u00e1rio novo. Basic_Metadata Metadados comuns entre as m\u00eddias a serem adicionadas. NewsItem_Text Cadastro de texto por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: title = models.CharField(max_length=150, unique=False) sutien = models.CharField(max_length=150, unique=False) authors = models.CharField(max_length=150, unique=False) editors = models.CharField(max_length=150, unique=False) # texto em si news_text = models.CharField(max_length=15000, unique=False) keywords = models.CharField(max_length=1500, unique=False) related_news = models.CharField(max_length=1500, unique=False) # pra qual editoria isso vai related_publisher = models.CharField(max_length=350, unique=False) # em qual qual midia isso circulou posted_on = models.CharField(max_length=150, unique=False) NewsItem_Photo Cadastro de imagem por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: title = models.CharField(max_length=150, unique=False) place = models.CharField(max_length=350, unique=False) photographer = models.CharField(max_length=350, unique=False) keywords = models.CharField(max_length=350, unique=False) used_equipament = models.CharField(max_length=350, unique=False) description = models.CharField(max_length=350, unique=False) # arquivo! image = models.FileField(upload_to=upload_path, blank=True, null=True) NewsItem_Graphics Cadastro de gr\u00e1fico por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: description = models.CharField(max_length=350, unique=False) data = models.CharField(max_length=350, unique=False) type_graphic = models.CharField(max_length=350, unique=False) designer = models.CharField(max_length=350, unique=False) # arquivo! graphic_image = models.FileField(upload_to=upload_path, blank=True, null=True)","title":"Backend da Primeira Sprint"},{"location":"primeira_sprint/#backend-da-primeira-sprint","text":"Feito em Django/Python, usando Django REST Framework .","title":"Backend da Primeira Sprint"},{"location":"primeira_sprint/#comandos","text":"mkdocs serve - Rodar na pasta \"documenta\u00e7\u00e3o\" para ler a documenta\u00e7\u00e3o. mkdocs build - Rodar na pasta \"documenta\u00e7\u00e3o\" para exportar a documenta\u00e7\u00e3o. python3 -m venv venv - Criar ambiente virtual. source venv/bin/activate - Entrar no ambiente virtual. chmod +x dependencias.sh - Para dar permiss\u00e3o para rodar o script de depend\u00eancias. ./dependencias.sh - Rodar script que baixa depend\u00eancias. Depend\u00eancia para rodar documenta\u00e7\u00e3o: pip install mkdocs","title":"Comandos"},{"location":"primeira_sprint/#arquivo-de-dependencias","text":"Arquivo com atalho para confirgua\u00e7\u00e3o de ambiente virtual. Basicamente baixa o Django se necess\u00e1rio e v\u00ea se o Python est\u00e1 na vers\u00e3o correta! echo \"Hello $USER\" echo \"Se certifique que seu Python3 est\u00e1 em dia (pelo menos Python 3.9.7)\" python3 --version pip3 install --upgrade pip3 python3 manage.py makemigrations python3 manage.py migrate pip3 install djangorestframework pip3 install django-cors-headers pip3 install Django echo \"Rodando Django -> 'python3 manage.py runserver'\" echo \"Tchau $USER\" python3 manage.py runserver","title":"Arquivo de Depend\u00eancias"},{"location":"primeira_sprint/#layout-do-projeto","text":". \u251c\u2500\u2500 func_basic \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 admin.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 apps.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 models.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 serializers.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 views.cpython-310.pyc \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u2502 \u251c\u2500\u2500 0001_initial.cpython-310.pyc \u2502 \u2502 \u2502 \u2514\u2500\u2500 0002_alter_user_login_user_id.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 0001_initial.py \u2502 \u2502 \u2514\u2500\u2500 0002_alter_user_login_user_id.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 serializers.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 TAC_RedJor4 \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 settings.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 wsgi.cpython-310.pyc \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 asgi.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 venv \u2502 \u251c\u2500\u2500 ... \u251c\u2500\u2500 .DS_Store \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 dependencias.sh \u2514\u2500\u2500 manage.py","title":"Layout do projeto"},{"location":"primeira_sprint/#proposta-de-desenvolvimento","text":"","title":"Proposta de Desenvolvimento"},{"location":"primeira_sprint/#mapeamento-teorico-do-conteudo","text":"","title":"Mapeamento te\u00f3rico do conte\u00fado"},{"location":"primeira_sprint/#modelos","text":"Para a primeira itera\u00e7\u00e3o do trabalho, focou-se em implementar a funcionalidade de adi\u00e7\u00e3o de texto, imagem e gr\u00e1ficos por parte do jornalista. O retorno dos dados ocorre por meio de um \"json.dump()\" para cada m\u00e9todo.","title":"Modelos"},{"location":"primeira_sprint/#user_login","text":"user_id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False) name = models.CharField(max_length=50, unique=True, null=False) password = models.CharField(max_length=150, unique=False, null=False) email = models.CharField(max_length=50, unique=True, null=False)","title":"User_Login"},{"location":"primeira_sprint/#get","text":"Dado par usu\u00e1rio e senha, retorna seu objeto de usu\u00e1rio. Passa seu id nas requisi\u00e7\u00f5es para adicionar itens de m\u00eddia novos.","title":"GET"},{"location":"primeira_sprint/#post","text":"Adiciona um us\u00e1rio novo.","title":"POST"},{"location":"primeira_sprint/#basic_metadata","text":"Metadados comuns entre as m\u00eddias a serem adicionadas.","title":"Basic_Metadata"},{"location":"primeira_sprint/#newsitem_text","text":"Cadastro de texto por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: title = models.CharField(max_length=150, unique=False) sutien = models.CharField(max_length=150, unique=False) authors = models.CharField(max_length=150, unique=False) editors = models.CharField(max_length=150, unique=False) # texto em si news_text = models.CharField(max_length=15000, unique=False) keywords = models.CharField(max_length=1500, unique=False) related_news = models.CharField(max_length=1500, unique=False) # pra qual editoria isso vai related_publisher = models.CharField(max_length=350, unique=False) # em qual qual midia isso circulou posted_on = models.CharField(max_length=150, unique=False)","title":"NewsItem_Text"},{"location":"primeira_sprint/#newsitem_photo","text":"Cadastro de imagem por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: title = models.CharField(max_length=150, unique=False) place = models.CharField(max_length=350, unique=False) photographer = models.CharField(max_length=350, unique=False) keywords = models.CharField(max_length=350, unique=False) used_equipament = models.CharField(max_length=350, unique=False) description = models.CharField(max_length=350, unique=False) # arquivo! image = models.FileField(upload_to=upload_path, blank=True, null=True)","title":"NewsItem_Photo"},{"location":"primeira_sprint/#newsitem_graphics","text":"Cadastro de gr\u00e1fico por parte do jornalista. Herda metadados de \"Basic_Metadata\". Recebe id do usu\u00e1rio para verifica\u00e7\u00e3o. Adiciona os campos: description = models.CharField(max_length=350, unique=False) data = models.CharField(max_length=350, unique=False) type_graphic = models.CharField(max_length=350, unique=False) designer = models.CharField(max_length=350, unique=False) # arquivo! graphic_image = models.FileField(upload_to=upload_path, blank=True, null=True)","title":"NewsItem_Graphics"}]}